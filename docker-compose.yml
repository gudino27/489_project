services:
  backend:
    build:
      context: ./cabinet-photo-server
      dockerfile: Dockerfile
    container_name: cabinet-photo-backend
    restart: unless-stopped
    user: "1000:1000"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=3001
    volumes:
      - ./data/uploads:/app/uploads
      - ./data/database:/app/database
      - ./data/logs:/app/logs 
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 20s
      timeout: 90s
      retries: 3
      start_period: 90s

  frontend:
    build:
      context: ./kitchen-designer
      dockerfile: Dockerfile
    container_name: kitchen-designer-frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx-proxy:
    image: nginx:alpine
    container_name: kitchen-designer-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "3001:3001"
    volumes:
      - ./nginx-tunnel.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: kitchen-designer-certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  app-network:
    driver: bridge

volumes:
  uploads:
  database:
